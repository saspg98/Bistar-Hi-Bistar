package UI;

import custom.components.HotelListItemPanel;
import internal.HotelDesc;
import internal.User;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import javax.swing.BorderFactory;
import javax.swing.JLabel;
import javax.swing.JPanel;
import verifyingTools.Verify;
import bridge.Helper;
import custom.components.FinalDialogPanel;
import custom.components.PastBookingListPanel;
import internal.Booking;
import internal.BookingConstraints;
import internal.DialogActionListener;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.time.LocalDate;
import java.time.Month;
import java.util.ArrayList;
import javax.swing.JButton;
import javax.swing.JOptionPane;

/**
 *
 * @author Sarthak
 */
public class MainForm extends javax.swing.JFrame implements MouseListener,
        ActionListener {//Mouse Listener for the mouse events in HotelListItemPanel, ActionListener for button clicks in PastBookingListPanel

    private final User user;
    private final LoginForm loginScreen;
    private HotelListItemPanel resultList[];
    private Booking thisBooking;

    private BookingConstraints bc;


    private static final String STAR = "\u2605";

    private static long NUMBER_OF_FUTURE_YEARS = 4;

    /**
     * Creates new form Main
     */
    public MainForm(User user, LoginForm l) {
        this.user = user;
        initComponents();
        startupCode();
        loginScreen = l;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        changePasswordDialog = new javax.swing.JDialog();
        changePasswordOkButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        oldPasswordPF = new javax.swing.JPasswordField();
        confirmNewPasswordPF = new javax.swing.JPasswordField();
        newPasswordPF = new javax.swing.JPasswordField();
        errorOldPasswordLabel = new javax.swing.JLabel();
        errorPasswordMatchLabel = new javax.swing.JLabel();
        errorPasswordLengthLabel = new javax.swing.JLabel();
        modifyBookingDialog = new javax.swing.JDialog();
        modifyDateDialogPanel1 = new custom.components.ModifyBookingDialogPanel();
        changeGuestRoomDialog = new javax.swing.JDialog();
        guestRoomDialogPanel = new custom.components.GuestRoomDialogPanel();
        finalDialog = new javax.swing.JDialog();
        finalDialogPanel = new custom.components.FinalDialogPanel();
        sidebar = new javax.swing.JPanel();
        body = new javax.swing.JPanel();
        bookHotelsPanelButton = new javax.swing.JPanel();
        bookHotelsLabel = new javax.swing.JLabel();
        myBookingsPanelButton = new javax.swing.JPanel();
        myBookingsLabel = new javax.swing.JLabel();
        settingsPanelButton = new javax.swing.JPanel();
        myProfileLabel = new javax.swing.JLabel();
        welcomeLabel = new javax.swing.JLabel();
        logoutLinkLabel = new javax.swing.JLabel();
        mainPanel = new javax.swing.JPanel();
        bookPanel = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        priceInputLabel = new javax.swing.JLabel();
        priceSlider = new javax.swing.JSlider();
        locationCB = new javax.swing.JComboBox<>();
        roomPanel = new javax.swing.JPanel();
        roomScrollPane = new javax.swing.JScrollPane();
        roomListPanel = new javax.swing.JPanel();
        goButton = new javax.swing.JButton();
        priceSpinner = new javax.swing.JSpinner();
        titleLabel = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        checkInDatePanel = new custom.components.DatePanel();
        checkOutDatePanel = new custom.components.DatePanel();
        bookGuestRoomPanel = new custom.components.GuestRoomPanel();
        showAvailableCheckBox = new javax.swing.JCheckBox();
        myProfilePanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        changePasswordButton = new javax.swing.JButton();
        fNameTF = new javax.swing.JTextField();
        emailTF = new javax.swing.JTextField();
        titlePanelSettings = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        mobileTF = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        pinCodeTF = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        dobTF = new javax.swing.JTextField();
        addTF = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        lNameTF = new javax.swing.JTextField();
        pastBookingsPanel = new javax.swing.JPanel();
        titlePanelMyBookings = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        listTypeCB = new javax.swing.JComboBox<>();
        bookingListScrollPane = new javax.swing.JScrollPane();
        bookingListPanel = new javax.swing.JPanel();
        hotelDetailsPanel = new javax.swing.JPanel();
        hotelTitlePanel = new javax.swing.JPanel();
        hotelDetailsRatingLabel = new javax.swing.JLabel();
        numReviewsLabel = new javax.swing.JLabel();
        hotelNameLabel = new javax.swing.JLabel();
        imagePanel = new javax.swing.JPanel();
        hotelImageLabel = new javax.swing.JLabel();
        bookingOptionsPanel = new javax.swing.JPanel();
        totalPriceLabel = new javax.swing.JLabel();
        hotelDetailsOptionsBottomPanel = new javax.swing.JPanel();
        bookNowButton = new javax.swing.JButton();
        bookingConfirmationLinkLabel = new javax.swing.JLabel();
        dateLabel = new javax.swing.JLabel();
        descriptionPanel = new javax.swing.JPanel();
        descriptionTabbedPanel1 = new custom.components.DescriptionTabbedPanel();
        backPanel = new javax.swing.JPanel();
        backLabel = new javax.swing.JLabel();

        changePasswordDialog.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        changePasswordDialog.setBackground(new java.awt.Color(204, 204, 204));
        changePasswordDialog.setMinimumSize(new java.awt.Dimension(638, 361));
        changePasswordDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        changePasswordOkButton.setFont(new java.awt.Font("Lato", 0, 30)); // NOI18N
        changePasswordOkButton.setText("OK");
        changePasswordOkButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        changePasswordOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordOkButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.ipadx = 50;
        gridBagConstraints.ipady = 25;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(changePasswordOkButton, gridBagConstraints);

        jLabel2.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        jLabel2.setText("Old Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(jLabel2, gridBagConstraints);

        jLabel3.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        jLabel3.setText("New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(jLabel3, gridBagConstraints);

        jLabel4.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        jLabel4.setText("Confirm New Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(jLabel4, gridBagConstraints);

        oldPasswordPF.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(oldPasswordPF, gridBagConstraints);

        confirmNewPasswordPF.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(confirmNewPasswordPF, gridBagConstraints);

        newPasswordPF.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 200;
        gridBagConstraints.ipady = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(newPasswordPF, gridBagConstraints);

        errorOldPasswordLabel.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        errorOldPasswordLabel.setForeground(new java.awt.Color(255, 51, 51));
        errorOldPasswordLabel.setText("*Incorrect Old Password");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(errorOldPasswordLabel, gridBagConstraints);

        errorPasswordMatchLabel.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        errorPasswordMatchLabel.setForeground(new java.awt.Color(255, 51, 51));
        errorPasswordMatchLabel.setText("*Passwords do not match");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(errorPasswordMatchLabel, gridBagConstraints);

        errorPasswordLengthLabel.setFont(new java.awt.Font("Lato", 0, 18)); // NOI18N
        errorPasswordLengthLabel.setForeground(new java.awt.Color(255, 51, 51));
        errorPasswordLengthLabel.setText("*Password must be greater than 8 characters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        changePasswordDialog.getContentPane().add(errorPasswordLengthLabel, gridBagConstraints);

        modifyBookingDialog.setMinimumSize(new java.awt.Dimension(520, 300));
        modifyBookingDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        modifyDateDialogPanel1.setMinimumSize(new java.awt.Dimension(447, 300));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        modifyBookingDialog.getContentPane().add(modifyDateDialogPanel1, gridBagConstraints);

        changeGuestRoomDialog.setMinimumSize(new java.awt.Dimension(648, 293));
        changeGuestRoomDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        guestRoomDialogPanel.setMinimumSize(new java.awt.Dimension(579, 293));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        changeGuestRoomDialog.getContentPane().add(guestRoomDialogPanel, gridBagConstraints);

        finalDialog.setTitle("Confirm Booking- BISTAR HI BISTAR");
        finalDialog.setBackground(new java.awt.Color(25, 25, 25));
        finalDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        finalDialog.setMinimumSize(new java.awt.Dimension(865,905));
        finalDialog.getContentPane().setLayout(new java.awt.GridBagLayout());

        finalDialogPanel.setMinimumSize(new java.awt.Dimension(865, 905));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        finalDialog.getContentPane().add(finalDialogPanel, gridBagConstraints);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("EzyBook"); // NOI18N
        setBackground(new java.awt.Color(25, 25, 25));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        sidebar.setBackground(new java.awt.Color(255, 255, 255));
        sidebar.setMinimumSize(new java.awt.Dimension(199, 455));

        body.setBackground(new java.awt.Color(59, 35, 59));

        bookHotelsPanelButton.setBackground(new java.awt.Color(36, 119, 119));
        bookHotelsPanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookHotelsPanelButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                bookHotelsPanelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                bookHotelsPanelButtonMouseExited(evt);
            }
        });

        bookHotelsLabel.setBackground(new java.awt.Color(36, 119, 119));
        bookHotelsLabel.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        bookHotelsLabel.setForeground(new java.awt.Color(255, 255, 255));
        bookHotelsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        bookHotelsLabel.setText("Book Hotels  ");
        bookHotelsLabel.setFocusable(false);

        javax.swing.GroupLayout bookHotelsPanelButtonLayout = new javax.swing.GroupLayout(bookHotelsPanelButton);
        bookHotelsPanelButton.setLayout(bookHotelsPanelButtonLayout);
        bookHotelsPanelButtonLayout.setHorizontalGroup(
            bookHotelsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bookHotelsPanelButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bookHotelsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bookHotelsPanelButtonLayout.setVerticalGroup(
            bookHotelsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bookHotelsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 48, Short.MAX_VALUE)
        );

        myBookingsPanelButton.setBackground(new java.awt.Color(59, 35, 59));
        myBookingsPanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                myBookingsPanelButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                myBookingsPanelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                myBookingsPanelButtonMouseExited(evt);
            }
        });

        myBookingsLabel.setBackground(new java.awt.Color(51, 30, 51));
        myBookingsLabel.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        myBookingsLabel.setForeground(new java.awt.Color(191, 191, 191));
        myBookingsLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        myBookingsLabel.setText("My Bookings  ");

        javax.swing.GroupLayout myBookingsPanelButtonLayout = new javax.swing.GroupLayout(myBookingsPanelButton);
        myBookingsPanelButton.setLayout(myBookingsPanelButtonLayout);
        myBookingsPanelButtonLayout.setHorizontalGroup(
            myBookingsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myBookingsPanelButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myBookingsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        myBookingsPanelButtonLayout.setVerticalGroup(
            myBookingsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myBookingsLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        settingsPanelButton.setBackground(new java.awt.Color(59, 35, 59));
        settingsPanelButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                settingsPanelButtonMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                settingsPanelButtonMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                settingsPanelButtonMouseExited(evt);
            }
        });

        myProfileLabel.setBackground(new java.awt.Color(59, 35, 59));
        myProfileLabel.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        myProfileLabel.setForeground(new java.awt.Color(191, 191, 191));
        myProfileLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        myProfileLabel.setText("My Profile");
        myProfileLabel.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout settingsPanelButtonLayout = new javax.swing.GroupLayout(settingsPanelButton);
        settingsPanelButton.setLayout(settingsPanelButtonLayout);
        settingsPanelButtonLayout.setHorizontalGroup(
            settingsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, settingsPanelButtonLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(myProfileLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        settingsPanelButtonLayout.setVerticalGroup(
            settingsPanelButtonLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(myProfileLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
        );

        welcomeLabel.setBackground(new java.awt.Color(59, 35, 59));
        welcomeLabel.setFont(new java.awt.Font("Lato Black", 0, 25)); // NOI18N
        welcomeLabel.setForeground(new java.awt.Color(249, 249, 249));
        welcomeLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        welcomeLabel.setText(" Welcome Susila! ");
        welcomeLabel.setOpaque(true);

        logoutLinkLabel.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        logoutLinkLabel.setForeground(new java.awt.Color(191, 191, 191));
        logoutLinkLabel.setText("Logout");
        logoutLinkLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        logoutLinkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutLinkLabelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutLinkLabelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutLinkLabelMouseExited(evt);
            }
        });

        javax.swing.GroupLayout bodyLayout = new javax.swing.GroupLayout(body);
        body.setLayout(bodyLayout);
        bodyLayout.setHorizontalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(settingsPanelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(myBookingsPanelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bookHotelsPanelButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(welcomeLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bodyLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(logoutLinkLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        bodyLayout.setVerticalGroup(
            bodyLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bodyLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(welcomeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bookHotelsPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(myBookingsPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(settingsPanelButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 294, Short.MAX_VALUE)
                .addComponent(logoutLinkLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout sidebarLayout = new javax.swing.GroupLayout(sidebar);
        sidebar.setLayout(sidebarLayout);
        sidebarLayout.setHorizontalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(sidebarLayout.createSequentialGroup()
                .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        sidebarLayout.setVerticalGroup(
            sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(body, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(sidebar, gridBagConstraints);

        mainPanel.setBackground(new java.awt.Color(255, 255, 255));
        mainPanel.setMinimumSize(new java.awt.Dimension(921, 608));
        mainPanel.setName(""); // NOI18N
        mainPanel.setLayout(new java.awt.CardLayout());

        bookPanel.setBackground(new java.awt.Color(25, 25, 25));
        bookPanel.setLayout(new java.awt.GridBagLayout());

        jLabel9.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Select Location");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(jLabel9, gridBagConstraints);

        priceInputLabel.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        priceInputLabel.setForeground(new java.awt.Color(255, 255, 255));
        priceInputLabel.setText("Price");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 18, 5, 5);
        bookPanel.add(priceInputLabel, gridBagConstraints);

        priceSlider.setBackground(new java.awt.Color(25, 25, 25));
        priceSlider.setFont(new java.awt.Font("Lato", 0, 16)); // NOI18N
        priceSlider.setMaximum(20000);
        priceSlider.setValue(3000);
        priceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                priceSliderStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(priceSlider, gridBagConstraints);

        locationCB.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        locationCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Gondwa", "Thane", "Awadh" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(locationCB, gridBagConstraints);

        roomPanel.setBackground(new java.awt.Color(25, 25, 25));
        roomPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Available Hotels", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lato Black", 0, 24), new java.awt.Color(255, 255, 255))); // NOI18N
        roomPanel.setLayout(new java.awt.GridBagLayout());

        roomScrollPane.setBackground(new java.awt.Color(25, 25, 25));
        roomScrollPane.setBorder(null);
        roomScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        roomListPanel.setBackground(new java.awt.Color(25, 25, 25));
        roomListPanel.setLayout(new java.awt.GridBagLayout());
        roomScrollPane.setViewportView(roomListPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 1;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        roomPanel.add(roomScrollPane, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 8.0;
        bookPanel.add(roomPanel, gridBagConstraints);

        goButton.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        goButton.setText("Search");
        goButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 8;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(17, 17, 17, 17);
        bookPanel.add(goButton, gridBagConstraints);

        priceSpinner.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        priceSpinner.setModel(new javax.swing.SpinnerNumberModel(3000.0d, null, 20000.0d, 250.0d));
        priceSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                priceSpinnerStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(priceSpinner, gridBagConstraints);

        titleLabel.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Book Your Hotel");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 4.0;
        gridBagConstraints.weighty = 2.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 0, 15, 0);
        bookPanel.add(titleLabel, gridBagConstraints);

        jLabel19.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setText("Check In");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 18, 5, 5);
        bookPanel.add(jLabel19, gridBagConstraints);

        jLabel20.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setText("Check Out");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(jLabel20, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(checkInDatePanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(checkOutDatePanel, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 3.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        bookPanel.add(bookGuestRoomPanel, gridBagConstraints);

        showAvailableCheckBox.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        showAvailableCheckBox.setForeground(new java.awt.Color(255, 255, 255));
        showAvailableCheckBox.setSelected(true);
        showAvailableCheckBox.setText("Show Only Available Rooms");
        showAvailableCheckBox.setOpaque(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        bookPanel.add(showAvailableCheckBox, gridBagConstraints);

        mainPanel.add(bookPanel, "bookPanel");

        myProfilePanel.setBackground(new java.awt.Color(25, 25, 25));

        jLabel6.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("First Name");

        jLabel7.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Pincode");

        editButton.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        changePasswordButton.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        changePasswordButton.setText("Change Password");
        changePasswordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changePasswordButtonActionPerformed(evt);
            }
        });

        fNameTF.setEditable(false);
        fNameTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        fNameTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        fNameTF.setEnabled(false);

        emailTF.setEditable(false);
        emailTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        emailTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        emailTF.setEnabled(false);
        emailTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                emailTFFocusGained(evt);
            }
        });

        titlePanelSettings.setBackground(new java.awt.Color(25, 25, 25));
        titlePanelSettings.setLayout(new java.awt.GridBagLayout());

        jLabel14.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("My Profile");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        titlePanelSettings.add(jLabel14, gridBagConstraints);

        jLabel8.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Email Address");

        jLabel11.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText("Residential Add.");

        mobileTF.setEditable(false);
        mobileTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        mobileTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        mobileTF.setEnabled(false);
        mobileTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                mobileTFFocusGained(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Mobile Number");

        pinCodeTF.setEditable(false);
        pinCodeTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        pinCodeTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        pinCodeTF.setEnabled(false);
        pinCodeTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                pinCodeTFFocusGained(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setText("DOB");

        dobTF.setEditable(false);
        dobTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        dobTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        dobTF.setEnabled(false);

        addTF.setEditable(false);
        addTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        addTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        addTF.setEnabled(false);

        jLabel18.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setText("Last Name");

        lNameTF.setEditable(false);
        lNameTF.setFont(new java.awt.Font("Lato", 0, 22)); // NOI18N
        lNameTF.setDisabledTextColor(new java.awt.Color(51, 51, 51));
        lNameTF.setEnabled(false);

        javax.swing.GroupLayout myProfilePanelLayout = new javax.swing.GroupLayout(myProfilePanel);
        myProfilePanel.setLayout(myProfilePanelLayout);
        myProfilePanelLayout.setHorizontalGroup(
            myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(titlePanelSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(myProfilePanelLayout.createSequentialGroup()
                .addGap(142, 142, 142)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myProfilePanelLayout.createSequentialGroup()
                        .addComponent(editButton)
                        .addGap(60, 60, 60)
                        .addComponent(changePasswordButton)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myProfilePanelLayout.createSequentialGroup()
                        .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12)
                            .addComponent(jLabel8)
                            .addComponent(jLabel13)
                            .addComponent(jLabel18))
                        .addGap(44, 44, 44)
                        .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lNameTF)
                            .addComponent(emailTF)
                            .addComponent(mobileTF)
                            .addComponent(pinCodeTF, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(dobTF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                            .addComponent(addTF, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
                            .addComponent(fNameTF, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(50, 50, 50))))
        );
        myProfilePanelLayout.setVerticalGroup(
            myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(myProfilePanelLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(titlePanelSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(lNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(myProfilePanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dobTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, myProfilePanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel13)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(emailTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(myProfilePanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pinCodeTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(mobileTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 192, Short.MAX_VALUE)
                .addGroup(myProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editButton)
                    .addComponent(changePasswordButton))
                .addGap(74, 74, 74))
        );

        mainPanel.add(myProfilePanel, "settingsPanel");

        pastBookingsPanel.setBackground(new java.awt.Color(25, 25, 25));
        pastBookingsPanel.setLayout(new java.awt.GridBagLayout());

        titlePanelMyBookings.setBackground(new java.awt.Color(25, 25, 25));
        titlePanelMyBookings.setLayout(new java.awt.GridBagLayout());

        jLabel15.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Our Past Collaborations :)");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        titlePanelMyBookings.add(jLabel15, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.PAGE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 9, 0, 9);
        pastBookingsPanel.add(titlePanelMyBookings, gridBagConstraints);

        listTypeCB.setFont(new java.awt.Font("Lato", 0, 26)); // NOI18N
        listTypeCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Confirmed Bookings", "Waiting List", "Previous Bookings" }));
        listTypeCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                listTypeCBItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(9, 9, 0, 9);
        pastBookingsPanel.add(listTypeCB, gridBagConstraints);

        bookingListScrollPane.setBorder(null);

        bookingListPanel.setBackground(new java.awt.Color(23, 23, 23));
        bookingListPanel.setLayout(new java.awt.GridBagLayout());
        bookingListScrollPane.setViewportView(bookingListPanel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 7.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 9, 9, 9);
        pastBookingsPanel.add(bookingListScrollPane, gridBagConstraints);

        mainPanel.add(pastBookingsPanel, "pastBookingsPanel");

        hotelDetailsPanel.setBackground(new java.awt.Color(25, 25, 25));
        hotelDetailsPanel.setLayout(new java.awt.GridBagLayout());

        hotelTitlePanel.setBackground(new java.awt.Color(25, 25, 25));

        hotelDetailsRatingLabel.setFont(new java.awt.Font("FreeMono", 0, 36)); // NOI18N
        hotelDetailsRatingLabel.setForeground(new java.awt.Color(255, 255, 0));
        hotelDetailsRatingLabel.setText("Rating");

        numReviewsLabel.setFont(new java.awt.Font("Lato", 0, 24)); // NOI18N
        numReviewsLabel.setForeground(new java.awt.Color(255, 255, 255));
        numReviewsLabel.setText("3,454 reviews");

        hotelNameLabel.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        hotelNameLabel.setForeground(new java.awt.Color(255, 255, 255));
        hotelNameLabel.setText("RESHMA HOTEL");

        javax.swing.GroupLayout hotelTitlePanelLayout = new javax.swing.GroupLayout(hotelTitlePanel);
        hotelTitlePanel.setLayout(hotelTitlePanelLayout);
        hotelTitlePanelLayout.setHorizontalGroup(
            hotelTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(hotelTitlePanelLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(hotelTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(hotelTitlePanelLayout.createSequentialGroup()
                        .addComponent(hotelDetailsRatingLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(numReviewsLabel))
                    .addComponent(hotelNameLabel))
                .addContainerGap(1020, Short.MAX_VALUE))
        );
        hotelTitlePanelLayout.setVerticalGroup(
            hotelTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, hotelTitlePanelLayout.createSequentialGroup()
                .addComponent(hotelNameLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(hotelTitlePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hotelDetailsRatingLabel)
                    .addComponent(numReviewsLabel)))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 1.5;
        hotelDetailsPanel.add(hotelTitlePanel, gridBagConstraints);

        imagePanel.setBackground(new java.awt.Color(25, 25, 25));
        imagePanel.setLayout(new java.awt.GridBagLayout());

        hotelImageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/hotel.jpg"))); // NOI18N
        hotelImageLabel.setText("\n");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        imagePanel.add(hotelImageLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 3.0;
        hotelDetailsPanel.add(imagePanel, gridBagConstraints);

        bookingOptionsPanel.setBackground(new java.awt.Color(25, 25, 25));
        bookingOptionsPanel.setLayout(new java.awt.GridBagLayout());

        totalPriceLabel.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        totalPriceLabel.setForeground(new java.awt.Color(0, 198, 0));
        totalPriceLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        totalPriceLabel.setText("Rs. 34,981");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        bookingOptionsPanel.add(totalPriceLabel, gridBagConstraints);

        hotelDetailsOptionsBottomPanel.setBackground(new java.awt.Color(25, 25, 25));
        hotelDetailsOptionsBottomPanel.setLayout(new java.awt.GridBagLayout());

        bookNowButton.setBackground(new java.awt.Color(59, 35, 59));
        bookNowButton.setFont(new java.awt.Font("Lato Black", 0, 36)); // NOI18N
        bookNowButton.setForeground(new java.awt.Color(255, 255, 255));
        bookNowButton.setText("BOOK NOW");
        bookNowButton.setContentAreaFilled(false);
        bookNowButton.setOpaque(true);
        bookNowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNowButtonActionPerformed(evt);
            }
        });
        hotelDetailsOptionsBottomPanel.add(bookNowButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        bookingOptionsPanel.add(hotelDetailsOptionsBottomPanel, gridBagConstraints);

        bookingConfirmationLinkLabel.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        bookingConfirmationLinkLabel.setForeground(new java.awt.Color(255, 255, 255));
        bookingConfirmationLinkLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bookingConfirmationLinkLabel.setText("3 Executive Rooms, 18 Guests");
        bookingConfirmationLinkLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        bookingConfirmationLinkLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookingConfirmationLinkLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookingConfirmationLinkLabelMouseClicked(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        bookingOptionsPanel.add(bookingConfirmationLinkLabel, gridBagConstraints);

        dateLabel.setFont(new java.awt.Font("Lato Black", 0, 24)); // NOI18N
        dateLabel.setForeground(new java.awt.Color(255, 255, 255));
        dateLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateLabel.setText("From someDate to somOtherDate");
        dateLabel.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        bookingOptionsPanel.add(dateLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 3.0;
        hotelDetailsPanel.add(bookingOptionsPanel, gridBagConstraints);

        descriptionPanel.setBackground(new java.awt.Color(25, 25, 25));
        descriptionPanel.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 4.0;
        descriptionPanel.add(descriptionTabbedPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 5.0;
        gridBagConstraints.insets = new java.awt.Insets(21, 0, 0, 0);
        hotelDetailsPanel.add(descriptionPanel, gridBagConstraints);

        backPanel.setBackground(new java.awt.Color(25, 25, 25));

        backLabel.setBackground(new java.awt.Color(25, 25, 25));
        backLabel.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        backLabel.setForeground(new java.awt.Color(255, 255, 255));
        backLabel.setText("\\u2190");
        backLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backLabelMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout backPanelLayout = new javax.swing.GroupLayout(backPanel);
        backPanel.setLayout(backPanelLayout);
        backPanelLayout.setHorizontalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(backPanelLayout.createSequentialGroup()
                .addComponent(backLabel)
                .addGap(0, 1293, Short.MAX_VALUE))
        );
        backPanelLayout.setVerticalGroup(
            backPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, backPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backLabel))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.FIRST_LINE_START;
        gridBagConstraints.weightx = 2.0;
        gridBagConstraints.weighty = 0.5;
        hotelDetailsPanel.add(backPanel, gridBagConstraints);

        mainPanel.add(hotelDetailsPanel, "hotelDetailsPanel");

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 7.5;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void settingsPanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsPanelButtonMouseClicked
      

        personalize();
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "settingsPanel");
        resetBgColor();
        UIMethods.setSelectedPanelButton(settingsPanelButton, myProfileLabel);
        isSelected[2] = true;

    }//GEN-LAST:event_settingsPanelButtonMouseClicked

    private void myBookingsPanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myBookingsPanelButtonMouseClicked

        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "pastBookingsPanel");
        resetBgColor();
        UIMethods.setSelectedPanelButton(myBookingsPanelButton, myBookingsLabel);
        isSelected[1] = true;

        loadBookings();
    }//GEN-LAST:event_myBookingsPanelButtonMouseClicked

    private void bookHotelsPanelButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookHotelsPanelButtonMouseClicked
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "bookPanel");
        resetBgColor();
        UIMethods.setSelectedPanelButton(bookHotelsPanelButton, bookHotelsLabel);
        isSelected[0] = true;

    }//GEN-LAST:event_bookHotelsPanelButtonMouseClicked

    private void bookHotelsPanelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookHotelsPanelButtonMouseEntered
       
        if (!isSelected[0]) {
            UIMethods.setHoveredPanelButton(bookHotelsPanelButton, true);
        }
    }//GEN-LAST:event_bookHotelsPanelButtonMouseEntered

    private void myBookingsPanelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myBookingsPanelButtonMouseEntered
        if (!isSelected[1]) {
            UIMethods.setHoveredPanelButton(myBookingsPanelButton, true);
        }
    }//GEN-LAST:event_myBookingsPanelButtonMouseEntered

    private void settingsPanelButtonMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsPanelButtonMouseEntered
        if (!isSelected[2]) {
            UIMethods.setHoveredPanelButton(settingsPanelButton, true);
        }
    }//GEN-LAST:event_settingsPanelButtonMouseEntered

    private void bookHotelsPanelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookHotelsPanelButtonMouseExited
        if (!isSelected[0]) {
            UIMethods.setHoveredPanelButton(bookHotelsPanelButton, false);
        }
    }//GEN-LAST:event_bookHotelsPanelButtonMouseExited

    private void myBookingsPanelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_myBookingsPanelButtonMouseExited
        if (!isSelected[1]) {
            UIMethods.setHoveredPanelButton(myBookingsPanelButton, false);
        }
    }//GEN-LAST:event_myBookingsPanelButtonMouseExited

    private void settingsPanelButtonMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_settingsPanelButtonMouseExited
        if (!isSelected[2]) {
            UIMethods.setHoveredPanelButton(settingsPanelButton, false);
        }
    }//GEN-LAST:event_settingsPanelButtonMouseExited

    private void logoutLinkLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLinkLabelMouseEntered
        logoutLinkLabel.setForeground(pressedButtonFontColor);
    }//GEN-LAST:event_logoutLinkLabelMouseEntered

    private void logoutLinkLabelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLinkLabelMouseExited
        logoutLinkLabel.setForeground(defaultButtonFontColor);
    }//GEN-LAST:event_logoutLinkLabelMouseExited

    private void logoutLinkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutLinkLabelMouseClicked
        logout();
    }//GEN-LAST:event_logoutLinkLabelMouseClicked

    private void priceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_priceSliderStateChanged
        priceSpinner.setValue(priceSlider.getValue());

    }//GEN-LAST:event_priceSliderStateChanged

    private void priceSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_priceSpinnerStateChanged
        double d = Double.parseDouble(priceSpinner.getValue().toString());
        priceSlider.setValue((int) d);
    }//GEN-LAST:event_priceSpinnerStateChanged

    private void goButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goButtonActionPerformed
        refreshBookingUI();
        LocalDate checkIn = checkInDatePanel.getDate();
        LocalDate checkOut = checkOutDatePanel.getDate();
        if (!checkOut.isAfter(checkIn)) {
            JOptionPane.showMessageDialog(null, 
                    "You can only check out AFTER you check in to the hotel", "Error",JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        loadHotels();

    }//GEN-LAST:event_goButtonActionPerformed

    private void bookNowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNowButtonActionPerformed
        finalDialogPanel.setBookingDetails(thisBooking);
        finalDialog.setLocationRelativeTo(null);
        finalDialog.setVisible(true);
    }//GEN-LAST:event_bookNowButtonActionPerformed

    private void backLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backLabelMouseClicked
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "bookPanel");
    }//GEN-LAST:event_backLabelMouseClicked

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        if (!isEditing) {
            fNameTF.setEditable(true);
            lNameTF.setEditable(true);
            emailTF.setEditable(true);
            addTF.setEditable(true);
            mobileTF.setEditable(true);
            pinCodeTF.setEditable(true);
            fNameTF.setEnabled(true);
            lNameTF.setEnabled(true);
            emailTF.setEnabled(true);
            addTF.setEnabled(true);
            mobileTF.setEnabled(true);
            pinCodeTF.setEnabled(true);
            isEditing = true;
            editButton.setText("Save");

        } else {

            if (saveDetails()) {

                fNameTF.setEditable(false);
                lNameTF.setEditable(false);
                emailTF.setEditable(false);
                addTF.setEditable(false);
                mobileTF.setEditable(false);
                pinCodeTF.setEditable(false);
                dobTF.setEditable(false);
                fNameTF.setEnabled(false);
                lNameTF.setEnabled(false);
                emailTF.setEnabled(false);
                addTF.setEnabled(false);
                dobTF.setEnabled(false);
                mobileTF.setEnabled(false);
                pinCodeTF.setEnabled(false);
                isEditing = false;
                editButton.setText("Edit");

            } else {

                isEditing = true;
            }
        }
    }//GEN-LAST:event_editButtonActionPerformed

    private void changePasswordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordButtonActionPerformed
        changePasswordDialog.setLocationRelativeTo(null);

        changePasswordDialog.setVisible(true);
    }//GEN-LAST:event_changePasswordButtonActionPerformed

    private void emailTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTFFocusGained

        emailTF.setForeground(Color.BLACK);
        emailTF.setText("");
    }//GEN-LAST:event_emailTFFocusGained

    private void mobileTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mobileTFFocusGained

        mobileTF.setForeground(Color.BLACK);
        mobileTF.setText("");
    }//GEN-LAST:event_mobileTFFocusGained

    private void pinCodeTFFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_pinCodeTFFocusGained

        pinCodeTF.setForeground(Color.BLACK);
        pinCodeTF.setText("");
    }//GEN-LAST:event_pinCodeTFFocusGained

    private void bookingConfirmationLinkLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookingConfirmationLinkLabelMouseClicked
        changeGuestRoomDialog.setLocationRelativeTo(null);
        changeGuestRoomDialog.setVisible(true);
    }//GEN-LAST:event_bookingConfirmationLinkLabelMouseClicked

    private void listTypeCBItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_listTypeCBItemStateChanged
        if (evt.getStateChange() == ItemEvent.SELECTED && isSelected[1]) {
            switch (listTypeCB.getSelectedIndex()) {

                case 0:
                    
                    loadBookings(PastBookingListPanel.CONFIRMED);
                    break;
                case 1:
                    System.out.println("calling loadBookings for waitlist");
                    loadBookings(PastBookingListPanel.WAIT_LIST);
                    break;
                case 2:
                    
                    loadBookings(PastBookingListPanel.PREVIOUS);
                    break;
            }
        }
    }//GEN-LAST:event_listTypeCBItemStateChanged

    private void changePasswordOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changePasswordOkButtonActionPerformed

        errorOldPasswordLabel.setVisible(false);
        errorPasswordLengthLabel.setVisible(false);
        errorPasswordMatchLabel.setVisible(false);

        if (!new String(oldPasswordPF.getPassword()).equals(user.getPassword())) {

            oldPasswordPF.setText("");
            errorOldPasswordLabel.setVisible(true);

        } else if (!Verify.isValidPassword(newPasswordPF.getPassword())) {

            newPasswordPF.setText("");
            confirmNewPasswordPF.setText("");
            errorPasswordLengthLabel.setVisible(true);

        } else if (!Verify.isValidConfirmPassword(newPasswordPF.getPassword(), confirmNewPasswordPF.getPassword())) {

            confirmNewPasswordPF.setText("");
            newPasswordPF.setText("");
            errorPasswordMatchLabel.setVisible(true);

        } else {

            Helper.changePassword(new String(newPasswordPF.getPassword()));
            user.setPassword(new String(newPasswordPF.getPassword()));
            changePasswordDialog.dispose();
            JOptionPane.showMessageDialog(null, "Password Changed Successfully!");

        }
    }//GEN-LAST:event_changePasswordOkButtonActionPerformed

    private void resetBgColor() {
        //reset bg color of all buttons
        bookHotelsPanelButton.setBackground(defaultButtonColor);
        myBookingsPanelButton.setBackground(defaultButtonColor);
        settingsPanelButton.setBackground(defaultButtonColor);

        //reset font of all labels
        bookHotelsLabel.setFont(defaultButtonFont);
        myBookingsLabel.setFont(defaultButtonFont);
        myProfileLabel.setFont(defaultButtonFont);

        //reset font color of all labels
        bookHotelsLabel.setForeground(defaultButtonFontColor);
        myBookingsLabel.setForeground(defaultButtonFontColor);
        myProfileLabel.setForeground(defaultButtonFontColor);

        for (int i = 0; i < 3; i++) {
            isSelected[i] = false;
        }
    }

    private void startupCode() {
        //Tidying up the UI
        resetBgColor();
        UIMethods.setSelectedPanelButton(bookHotelsPanelButton, bookHotelsLabel);
        isSelected[0] = true;

        bookHotelsPanelButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        myBookingsPanelButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        settingsPanelButton.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        roomScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        bookingListScrollPane.getVerticalScrollBar().setUnitIncrement(15);
        backLabel.setText("\u2190");//setting the back button unicode

        //Setting error labels invisible
        errorOldPasswordLabel.setVisible(false);
        errorPasswordLengthLabel.setVisible(false);
        errorPasswordMatchLabel.setVisible(false);

        setupLocations(Helper.distinctLocations());

        //setting the DAL for the dialogBoxes
        DialogActionListener dal = new DialogActionListener(guestRoomDialogPanel, modifyDateDialogPanel1, finalDialogPanel);
        guestRoomDialogPanel.setMainFormReference(this);
        changePasswordDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        changeGuestRoomDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        modifyBookingDialog.setModalityType(Dialog.ModalityType.APPLICATION_MODAL);
        
        //setting the rooms in the guestRoomDialogBoxes
        guestRoomDialogPanel.setRoomTypes(HotelDesc.ROOM_TYPES);

        //for setting the page to return to the starting page
        finalDialogPanel.addActionListener(this);

        //setting up the date panels
        checkInDatePanel.setMinDate(LocalDate.of(2017, Month.MARCH, 20));
        checkInDatePanel.setMaxDate(LocalDate.now().plusYears(NUMBER_OF_FUTURE_YEARS));

        checkOutDatePanel.setMinDate(LocalDate.of(2017, Month.MARCH, 21));
        checkOutDatePanel.setMaxDate(LocalDate.now().plusYears(NUMBER_OF_FUTURE_YEARS).plusDays(1));

        //Personalizing
        personalize();

    }

    //Custom Variable declarations
    private final Color defaultButtonColor = new Color(59, 35, 59);
    private final Color pressedButtonColor = new Color(36, 119, 119);
    private final Color hoverButtonColor = new Color(45, 27, 45);

    private final Color defaultButtonFontColor = new Color(191, 191, 191);
    private final Color pressedButtonFontColor = new Color(250, 250, 250);

    private final Font defaultButtonFont = new Font("Lato", Font.PLAIN, 24);
    private final Font pressedButtonFont = new Font("Lato Black", Font.PLAIN, 24);

    private final Font defaultKeyFont = new Font("Lato Black", Font.PLAIN, 22);
    private final Font defaultValueFont = new Font("Lato", Font.PLAIN, 22);

    private final Color textColor = new Color(0, 0, 0);
    private final Color bgColor = new Color(255, 255, 255);

    private boolean isSelected[] = new boolean[3];//particularly dirty, will replace with PButton once out of netbeans

    private boolean isEditing = false;//state of the edit button in the settings panel
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addTF;
    private javax.swing.JLabel backLabel;
    private javax.swing.JPanel backPanel;
    private javax.swing.JPanel body;
    private custom.components.GuestRoomPanel bookGuestRoomPanel;
    private javax.swing.JLabel bookHotelsLabel;
    private javax.swing.JPanel bookHotelsPanelButton;
    private javax.swing.JButton bookNowButton;
    private javax.swing.JPanel bookPanel;
    private javax.swing.JLabel bookingConfirmationLinkLabel;
    private javax.swing.JPanel bookingListPanel;
    private javax.swing.JScrollPane bookingListScrollPane;
    private javax.swing.JPanel bookingOptionsPanel;
    private javax.swing.JDialog changeGuestRoomDialog;
    private javax.swing.JButton changePasswordButton;
    private javax.swing.JDialog changePasswordDialog;
    private javax.swing.JButton changePasswordOkButton;
    private custom.components.DatePanel checkInDatePanel;
    private custom.components.DatePanel checkOutDatePanel;
    private javax.swing.JPasswordField confirmNewPasswordPF;
    private javax.swing.JLabel dateLabel;
    private javax.swing.JPanel descriptionPanel;
    private custom.components.DescriptionTabbedPanel descriptionTabbedPanel1;
    private javax.swing.JTextField dobTF;
    private javax.swing.JButton editButton;
    private javax.swing.JTextField emailTF;
    private javax.swing.JLabel errorOldPasswordLabel;
    private javax.swing.JLabel errorPasswordLengthLabel;
    private javax.swing.JLabel errorPasswordMatchLabel;
    private javax.swing.JTextField fNameTF;
    private javax.swing.JDialog finalDialog;
    private custom.components.FinalDialogPanel finalDialogPanel;
    private javax.swing.JButton goButton;
    private custom.components.GuestRoomDialogPanel guestRoomDialogPanel;
    private javax.swing.JPanel hotelDetailsOptionsBottomPanel;
    private javax.swing.JPanel hotelDetailsPanel;
    private javax.swing.JLabel hotelDetailsRatingLabel;
    private javax.swing.JLabel hotelImageLabel;
    private javax.swing.JLabel hotelNameLabel;
    private javax.swing.JPanel hotelTitlePanel;
    private javax.swing.JPanel imagePanel;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField lNameTF;
    private javax.swing.JComboBox<String> listTypeCB;
    private javax.swing.JComboBox<String> locationCB;
    private javax.swing.JLabel logoutLinkLabel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTextField mobileTF;
    private javax.swing.JDialog modifyBookingDialog;
    private custom.components.ModifyBookingDialogPanel modifyDateDialogPanel1;
    private javax.swing.JLabel myBookingsLabel;
    private javax.swing.JPanel myBookingsPanelButton;
    private javax.swing.JLabel myProfileLabel;
    private javax.swing.JPanel myProfilePanel;
    private javax.swing.JPasswordField newPasswordPF;
    private javax.swing.JLabel numReviewsLabel;
    private javax.swing.JPasswordField oldPasswordPF;
    private javax.swing.JPanel pastBookingsPanel;
    private javax.swing.JTextField pinCodeTF;
    private javax.swing.JLabel priceInputLabel;
    private javax.swing.JSlider priceSlider;
    private javax.swing.JSpinner priceSpinner;
    private javax.swing.JPanel roomListPanel;
    private javax.swing.JPanel roomPanel;
    private javax.swing.JScrollPane roomScrollPane;
    private javax.swing.JPanel settingsPanelButton;
    private javax.swing.JCheckBox showAvailableCheckBox;
    private javax.swing.JPanel sidebar;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JPanel titlePanelMyBookings;
    private javax.swing.JPanel titlePanelSettings;
    private javax.swing.JLabel totalPriceLabel;
    private javax.swing.JLabel welcomeLabel;
    // End of variables declaration//GEN-END:variables

    private void logout() {
        //TODO: security?
        loginScreen.setVisible(true);
        loginScreen.setEnabled(true);
        this.dispose();
    }

    private void personalize() {
        welcomeLabel.setText(" Welcome " + user.getUsername() + "! ");
        fNameTF.setText(user.getFName());
        lNameTF.setText(user.getLName());
        emailTF.setText(user.getEmail());
        addTF.setText(user.getAddress());
        mobileTF.setText(user.getMobile());
        pinCodeTF.setText(Integer.toString(user.getPinCode()));
        dobTF.setText(user.getDOB().toString());

    }

    private boolean saveDetails() {            // Method to change the details of the user in the database

        try {

            if (!Verify.isValidEmail(emailTF.getText().trim())) {

                emailTF.setText("Invalid Email");
                emailTF.setForeground(Color.RED);
                return false;

            } else if (!Verify.isValidPinCode(pinCodeTF.getText().trim())) {

                pinCodeTF.setText("Invalid Pincode");
                pinCodeTF.setForeground(Color.RED);
                return false;

            } else if (!Verify.isValidMobile(mobileTF.getText().trim())) {

                mobileTF.setText("Invalid Mobile Number");
                mobileTF.setForeground(Color.RED);
                return false;

            } else {

                user.setFName(fNameTF.getText().trim());
                user.setLName(lNameTF.getText().trim());
                user.setAddress(addTF.getText().trim());
                user.setEmail(emailTF.getText().trim());
                user.setMobile(mobileTF.getText().trim());
                user.setPinCode(Integer.parseInt(pinCodeTF.getText().trim()));

                Helper.updateUserProfile(user);

                return true;
            }
        } catch (NumberFormatException e) {

            pinCodeTF.setText("Invalid Pincode");
            pinCodeTF.setForeground(Color.RED);
            e.printStackTrace();
            return false;

        } catch (Exception e) {

            e.printStackTrace();
            return false;
        }
    }

    @Override
    public void mouseClicked(MouseEvent e) {

        JLabel label = (JLabel) e.getComponent();
        JPanel j = (JPanel) label.getParent();
        HotelListItemPanel i;

        if (j instanceof HotelListItemPanel) {
            i = (HotelListItemPanel) j;
            loadHotelDetails(i);
        } else {//IMP! Assuming the type of rooms wont have the character '-' inside them!!
            i = (HotelListItemPanel) j.getParent().getParent();
            String s = label.getText();
            s = s.substring(s.indexOf('>') + 1, s.indexOf('-') - 1);
            System.out.println(s);
            loadHotelDetails(i, s);
        }
        // loadHotel(resultList[i.getIndex()]);
        ((CardLayout) mainPanel.getLayout()).show(mainPanel, "hotelDetailsPanel");
        System.out.println("Clicked On " + ((JLabel) e.getComponent()).getText());

    }

    @Override
    public void mousePressed(MouseEvent e) {
    }

    @Override
    public void mouseReleased(MouseEvent e) {
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        JLabel j = (JLabel) e.getComponent();
        if (j.getName().equals("underline")) {
            j.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, j.getForeground()));
        }
    }

    @Override
    public void mouseExited(MouseEvent e) {
        JLabel j = (JLabel) e.getComponent();
        if (j.getName().equals("underline")) {
            j.setBorder(BorderFactory.createEmptyBorder(0, 0, 1, 0));
        }
        //j.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 1, 0));
    }

    private void loadHotelDetails(HotelListItemPanel hotelListItemPanel) {

        loadHotelDetails(hotelListItemPanel, HotelDesc.ROOM_TYPES[0]);
    }

    private void loadHotelDetails(HotelListItemPanel hotelListItemPanel, String type) {
        HotelDesc des = hotelListItemPanel.getHotelDesc();
        double price = des.getCost(type, bc.getNumRooms(), bc.getCheckIn(), bc.getCheckOut());
        hotelNameLabel.setText(des.getHotelName());
        numReviewsLabel.setText(des.getRating().getTotalRatingCount() + " reviews");
        hotelDetailsRatingLabel.setText(UIMethods.getRatingString((int)(des.getRating().getOverallRating())));
        descriptionTabbedPanel1.setDescription(des.getDescription(), des.getHotelAmenities(), des.getRating());
        
        thisBooking = new Booking(bc.getCheckIn(), bc.getCheckOut(),bc.getNumGuests() ,
                bc.getNumRooms(), des.getAddress(), des.getHotelName(), type,
                (int)price);//TODO: ADD SOMETHING FOR WATILIST!!
        thisBooking.setHotel(des);
        thisBooking.setWaitlist(!des.isRoomTypeAvailable(type));
        thisBooking.setHotelID(des.getHotelID());
        guestRoomDialogPanel.setThisBooking(thisBooking);

        refreshHotelDetailsUI();
        /*bookingConfirmationLinkLabel.setText(bc.getNumRooms() + " " + type + ", " + numOfGuests + " Guests");
        totalPriceLabel.setText(HotelDesc.getCost(type, bc.getNumRooms(), bc.getCheckIn(), bc.getCheckOut()) + "");
        dateLabel.setText("From "+bc.getCheckIn().toString() + " to " + bc.getCheckOut().toString());*/

    }

    private void loadBookings() {
        loadBookings(PastBookingListPanel.CONFIRMED);
    }

    private void loadBookings(String type) {
        bookingListPanel.removeAll();
        bookingListPanel.revalidate();
        bookingListPanel.repaint();
        System.out.println("Load booking has been called for " + type);
        ArrayList<Booking> bookings = new ArrayList();
        if (type.equals(PastBookingListPanel.CONFIRMED)) {
            bookings = Helper.confirmedBookings();
        } else if (type.equals(PastBookingListPanel.WAIT_LIST)) {
            bookings = Helper.waitlistBookings();
        } else if (type.equals(PastBookingListPanel.PREVIOUS)) {
            bookings = Helper.oldBookings();
        }
        System.err.println("Size of array is as follows  " + bookings.size());

        if (bookings.size() > 0) {
            PastBookingListPanel[] list = UIMethods.createBookingListPanels(bookings.toArray(new Booking[1]), type, this);
            System.out.println("size of bkingListPanel is " + list.length);
            GridBagConstraints gbc = new GridBagConstraints();
            gbc.anchor = GridBagConstraints.FIRST_LINE_START;
            gbc.fill = GridBagConstraints.BOTH;
            gbc.gridx = 0;
            gbc.gridy = 0;
            gbc.weightx = 1.0;
            gbc.weighty = 0.2;

            for (int i = 0; i < list.length; i++) {
                gbc.gridy = i;
                bookingListPanel.add(list[i], gbc);
            }
            //TODO: see if revalidate() can/should be removed
            bookingListPanel.revalidate();
            bookingListPanel.repaint();
            System.out.println("No of comps in bookingListPanel is " + bookingListPanel.getComponents().length);
        }

    }

    private void makeBookingConstraints() {
        LocalDate checkIn = checkInDatePanel.getDate();
        LocalDate checkOut = checkOutDatePanel.getDate();    
        double price = 30000;//(int)(priceSpinner.getValue());
        String loc = locationCB.getSelectedItem().toString();
        int r = bookGuestRoomPanel.getRooms();
        

        boolean showAll = !showAvailableCheckBox.isSelected();
        bc = new BookingConstraints(checkIn, checkOut, price, r, loc, showAll);
        bc.setNumGuests(bookGuestRoomPanel.getGuests());
    }

    private void setupLocations(String[] locStrings) {
        locationCB.removeAllItems();

        for (String s : locStrings) {
            locationCB.addItem(s);

        }
    }

    //IMP! TO be called everytime after booking is changed!
    public void refreshHotelDetailsUI() {
        bookingConfirmationLinkLabel.setText(thisBooking.getNumRooms() + " " + thisBooking.getRoomType() + ", " + thisBooking.getNumPeople() + " Guests");
        totalPriceLabel.setText(HotelListItemPanel.CURRENCY + thisBooking.getHotel().getCost(thisBooking.getRoomType(), thisBooking.getNumRooms(), thisBooking.getCheckIn(), thisBooking.getCheckOut()));
        dateLabel.setText("From " + thisBooking.getCheckIn().toString() + " to " + thisBooking.getCheckOut().toString());
        //TODO! CHECK IF HOTEL TYPE IS WAITLISTED

        if (thisBooking.isWaitlist()) {
            bookNowButton.setText("Waitlist");
        } else {
            bookNowButton.setText("Book Now");
        }
        
        
    }

    @Override
    public void actionPerformed(ActionEvent e) {

        switch (e.getActionCommand()) {

            case FinalDialogPanel.F_CONF:
                refreshBookingUI();
                ((CardLayout) mainPanel.getLayout()).show(mainPanel, "bookPanel");
                break;
            //handle pastBookingListPanel buttons!!
            case PastBookingListPanel.CANCEL_BOOKING:
                Booking b = ((PastBookingListPanel) ((JButton) e.getSource()).getParent()).getThisBooking();
                b.print();
                Helper.cancelBooking(b);
                loadBookings(PastBookingListPanel.CONFIRMED);
                break;
            case PastBookingListPanel.MODIFY_BOOKING:
                Booking b2 = ((PastBookingListPanel) ((JButton) e.getSource()).getParent()).getThisBooking();
                b2.print();
                //call method with booking b
                break;
            case PastBookingListPanel.BOOK_WAITLIST:
                Booking b3 = ((PastBookingListPanel) ((JButton) e.getSource()).getParent()).getThisBooking();
                b3.print();
                //call method with booking b
                break;

            case PastBookingListPanel.SUBMIT_RATING:
                Booking b4 = ((PastBookingListPanel) ((JButton) e.getSource()).getParent()).getThisBooking();
                PastBookingListPanel panel = (PastBookingListPanel) ((JButton) e.getSource()).getParent();
                panel.setRatingPanelEnabled(false);
                //save rating to database!
                b4.print();
                //call method with booking b
                break;
            default:
                //do nothing
                break;
        }
    }

    public void refreshBookingUI() {
        roomListPanel.removeAll();
        roomListPanel.revalidate();
        roomListPanel.repaint();
    }

    public void loadHotels() {
        
        makeBookingConstraints();
        ArrayList<HotelDesc> list = Helper.searchAndReturnHotelList(bc);

        resultList = UIMethods.createHotelListItemPanels(list, this, bc.getMaxPrice(), bc.isShowAll());

        GridBagConstraints gbc = new GridBagConstraints();
        gbc.anchor = GridBagConstraints.FIRST_LINE_START;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 0.3;

        if (resultList.length > 0) {
            for (int i = 0; i < resultList.length; i++) {
                gbc.gridy = i;
                roomListPanel.add(resultList[i], gbc);
            }
        } else {
            JLabel noResulLabel = new JLabel();
            noResulLabel.setFont(new java.awt.Font("Lato Black", 0, 22)); // NOI18N
            noResulLabel.setForeground(Color.WHITE);
            noResulLabel.setText("Sorry, no hotels are available with the currently selected options. Try changing them");
            roomListPanel.add(noResulLabel, gbc);
        }

        roomListPanel.revalidate();
        roomListPanel.repaint();
    }
}